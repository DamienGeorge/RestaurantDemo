@attribute [Authorize(Roles = "Administrator")]
@page "/admin/salesbyday"

@inject IItemSQLData itemData

<h3 class="text-info">Total Orders</h3>
<div>
    @if (showAllTrigger)
    {
        <button class="btn btn-light" @onclick="TriggerFilter">Today</button>
    }
    else
    {
        <button class="btn btn-light" @onclick="TriggerFilter">All Data</button>
    }
</div>

@*insert section for date filter*@

<table class="table table-striped">
    <thead class="thead thead-dark">
        <tr>
            <th>Customer Name</th>
            <th>Item Total</th>
            <th>Tax Total</th>
            <th>Discount Total</th>
            <th>Total Cost</th>
            <th>
                Order Date
                @if (orderbyTrigger == false)
                {
                    <button class="oi oi-sort-ascending" @onclick="TiggerFilterByDate"></button>
                }
                else
                {
                    <button class="oi oi-sort-descending" @onclick="TiggerFilterByDate"></button>
                }
            </th>
        </tr>
    </thead>
    <tbody>

        @foreach (var order in filteredorders)
        {
            <tr>
                <td>@order.CustomerName</td>
                <td>@order.ItemTotal</td>
                <td>@order.TaxTotal</td>
                <td>@order.DiscountPercentage</td>
                <td>@order.TotalCost</td>
                <td>@order.OrderDate</td>
            </tr>
        }
    </tbody>
</table>

@code {

    DateTime dateStartFilter = DateTime.Today;
    DateTime dateEndFilter = DateTime.Today;
    bool orderbyTrigger = false;
    bool showAllTrigger = false;

    List<IOrderModel> orders = new List<IOrderModel>();
    List<IOrderModel> filteredorders = new List<IOrderModel>(); //=> orders.Where(x => x.OrderDate.Date >= dateStartFilter && x.OrderDate.Date <= dateEndFilter).ToList();


    protected override async Task OnParametersSetAsync()
    {
        orders = await itemData.ReadOrders();

        UpdateDate(orders);
    }

    private void TriggerFilter()
    {
        showAllTrigger ^= true;

        if (showAllTrigger)
        {
            dateStartFilter = DateTime.MinValue;
            dateEndFilter = DateTime.Now;
        }
        else
        {
           dateStartFilter = DateTime.Today;
        }

        UpdateDate(orders);
    }

    private void TiggerFilterByDate()
    {
        orderbyTrigger ^= true;

        FilterByDate();
    }

    private void UpdateDate(List<IOrderModel> orders)
    {
        filteredorders = orders.Where(x => x.OrderDate.Date >= dateStartFilter && x.OrderDate.Date <= dateEndFilter).ToList();

        FilterByDate();
    }

    private void FilterByDate()
    {

        if (orderbyTrigger)
        {
            filteredorders = filteredorders.OrderByDescending(x => x.OrderDate).ToList();
        }
        else
        {
            filteredorders = filteredorders.OrderBy(x => x.OrderDate).ToList();
        }
    }

}
